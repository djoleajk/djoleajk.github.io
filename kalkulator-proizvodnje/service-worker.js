// ============================================
// SERVICE WORKER ZA PWA FUNKCIONALNOST
// Cache strategija + Offline podr≈°ka
// ============================================

const CACHE_NAME = 'production-calculator-v1';
const urlsToCache = [
    './',
    './index.html',
    './bem.html',
    './italijanka.html',
    './robot.html',
    './ubadanje.html',
    './zatvaranje-mine.html',
    './peskarenje.html',
    './history.html',
    './styles.css',
    './favicon.svg',
    './time-sync.js',
    './weather.js',
    './bem.js',
    './italijanka.js',
    './robot.js',
    './ubadanje.js',
    './zatvaranje-mine.js',
    './peskarenje.js',
    './history-manager.js',
    './notifications.js'
];

// Instalacija Service Worker-a
self.addEventListener('install', (event) => {
    console.log('Service Worker: –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞—ö–µ...');
    
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then((cache) => {
                console.log('Service Worker: –ö–µ—à–∏—Ä–∞—ö–µ —Ñ–∞—ò–ª–æ–≤–∞');
                return cache.addAll(urlsToCache);
            })
            .then(() => {
                console.log('‚úì Service Worker: –£—Å–ø–µ—à–Ω–æ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω');
                return self.skipWaiting();
            })
            .catch((error) => {
                console.error('Service Worker: –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—ò–∏:', error);
            })
    );
});

// Aktivacija Service Worker-a
self.addEventListener('activate', (event) => {
    console.log('Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—ò–∞...');
    
    event.waitUntil(
        caches.keys().then((cacheNames) => {
            return Promise.all(
                cacheNames.map((cacheName) => {
                    if (cacheName !== CACHE_NAME) {
                        console.log('Service Worker: –ë—Ä–∏—Å–∞—ö–µ —Å—Ç–∞—Ä–æ–≥ –∫–µ—à–∞:', cacheName);
                        return caches.delete(cacheName);
                    }
                })
            );
        }).then(() => {
            console.log('‚úì Service Worker: –ê–∫—Ç–∏–≤–∏—Ä–∞–Ω');
            return self.clients.claim();
        })
    );
});

// Fetch strategija: Cache First, then Network
self.addEventListener('fetch', (event) => {
    // Preskoƒçi cross-origin zahteve (API pozive)
    if (!event.request.url.startsWith(self.location.origin)) {
        return;
    }

    event.respondWith(
        caches.match(event.request)
            .then((cachedResponse) => {
                if (cachedResponse) {
                    // Pronaƒëeno u cache-u
                    return cachedResponse;
                }

                // Nije u cache-u, preuzmi sa mre≈æe
                return fetch(event.request)
                    .then((response) => {
                        // Proveri da li je validan odgovor
                        if (!response || response.status !== 200 || response.type !== 'basic') {
                            return response;
                        }

                        // Kloniraj odgovor jer mo≈æe biti konzumiran samo jednom
                        const responseToCache = response.clone();

                        caches.open(CACHE_NAME)
                            .then((cache) => {
                                cache.put(event.request, responseToCache);
                            });

                        return response;
                    })
                    .catch(() => {
                        // Offline fallback
                        console.log('Service Worker: Offline re≈æim');
                        return caches.match('./index.html');
                    });
            })
    );
});

// Push notifikacije
self.addEventListener('push', (event) => {
    console.log('Service Worker: Push –ø—Ä–∏–º—ô–µ–Ω');
    
    const options = {
        body: event.data ? event.data.text() : '–ù–æ–≤–∞ –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—ò–∞',
        icon: 'üîî',
        badge: 'üè≠',
        vibrate: [200, 100, 200],
        data: {
            dateOfArrival: Date.now(),
            primaryKey: 1
        }
    };

    event.waitUntil(
        self.registration.showNotification('–ö–∞–ª–∫—É–ª–∞—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∞', options)
    );
});

// Klik na notifikaciju
self.addEventListener('notificationclick', (event) => {
    console.log('Service Worker: –ö–ª–∏–∫ –Ω–∞ –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—ò—É');
    
    event.notification.close();

    event.waitUntil(
        clients.openWindow('./')
    );
});

// Background sync (opciono, za buduƒáe pro≈°irenje)
self.addEventListener('sync', (event) => {
    console.log('Service Worker: Background —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—ò–∞');
    
    if (event.tag === 'sync-calculations') {
        event.waitUntil(syncCalculations());
    }
});

async function syncCalculations() {
    // Ovde mo≈æete dodati logiku za sinhronizaciju sa serverom
    console.log('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—ò–∞ –∫–∞–ª–∫—É–ª–∞—Ü–∏—ò–∞...');
}

